name: Node CI
on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"
    name: Run unit tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - name: Setup .npmrc file for NPM registry
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable --prefer-offline
      - name: Check types
        run: yarn typecheck
      - name: Lint
        run: yarn lint
      - name: Unit tests
        run: yarn test:ci

      - name: '@grafana/create-plugin - test an app plugin generation'
        run: yarn workspace @grafana/create-plugin run generate-app && (cd ./packages/create-plugin/generated && yarn install --prefer-offline && yarn build && yarn lint)
      - name: '@grafana/create-plugin - test an app with backend plugin generation'
        run: yarn workspace @grafana/create-plugin run generate-app-backend && (cd ./packages/create-plugin/generated && yarn install --prefer-offline && yarn build && yarn lint)
      - name: '@grafana/create-plugin - test panel plugin generation'
        run: yarn workspace @grafana/create-plugin run generate-panel && (cd ./packages/create-plugin/generated && yarn install --prefer-offline && yarn build && yarn lint)
      - name: '@grafana/create-plugin - test datasource plugin generation'
        run: yarn workspace @grafana/create-plugin run generate-datasource && (cd ./packages/create-plugin/generated && yarn install --prefer-offline && yarn build && yarn lint)
      - name: '@grafana/create-plugin - test datasource with backend plugin generation'
        run: yarn workspace @grafana/create-plugin run generate-datasource-backend && (cd ./packages/create-plugin/generated && yarn install --prefer-offline && yarn build && yarn lint)

      - name: '@grafana/sign-plugin - build'
        run: yarn workspace @grafana/sign-plugin run build
      - name: '@grafana/sign-plugin - sign generated plugin'
        env:
          GRAFANA_API_KEY: ${{ secrets.GRAFANA_API_KEY }}
        run: node ../../sign-plugin/dist/bin/run.js --rootUrls http://www.example.com --signatureType private
        working-directory: ./packages/create-plugin/generated

  release:
    runs-on: ubuntu-latest
    needs: test
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"
    name: Release packages
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_BOT_ACCESS_TOKEN }}

      - name: Prepare repository
        run: git fetch --unshallow --tags

      - name: Setup environment
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable --prefer-offline

      - name: Build
        run: yarn build

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_BOT_ACCESS_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: yarn release
